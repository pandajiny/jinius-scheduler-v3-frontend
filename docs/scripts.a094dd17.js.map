{"version":3,"sources":["scripts/App.ts","scripts/modules/HttpsModles.ts","scripts/modules/auth/index.ts","scripts/modules/auth/login.ts","scripts/pages/login-page/index.ts","scripts/pages/login-require-page/index.ts","scripts/modules/groups/get-group.ts","scripts/modules/groups/add-group.ts","scripts/modules/groups/update-group.ts","scripts/modules/groups/index.ts","scripts/modules/todo/get-todo.ts","scripts/modules/todo/add-todo.ts","scripts/modules/todo/delete-todo.ts","scripts/modules/todo/todo.utils.ts","scripts/modules/todo/update-todo.ts","scripts/modules/todo/index.ts","scripts/pages/todo-page/nav.ts","scripts/modules/DocumnetModules.ts","scripts/modules/TimeModules.ts","scripts/pages/todo-page/todo/todo.add-form.ts","scripts/modules/groups/delete-group.ts","scripts/pages/todo-page/todo/todo.item.ts","scripts/pages/todo-page/todo/todo.list.ts","scripts/pages/todo-page/index.ts","scripts/navigate-page.ts","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.a094dd17.js","sourceRoot":"..\\frontend\\src","sourcesContent":["import { doSignOut } from \"./modules/auth\";\r\nimport { updatePage } from \"./navigate-page\";\r\n\r\nexport function $renderAccountState(props: {\r\n  $container: HTMLElement;\r\n  user: User | null;\r\n}) {\r\n  const { $container, user } = props;\r\n  if (user) {\r\n    $renderUserState({ $container, user });\r\n  } else {\r\n    $renderLoginRequire({ $container });\r\n  }\r\n}\r\n\r\nfunction $renderUserState(props: { $container: HTMLElement; user: User }) {\r\n  const { user, $container } = props;\r\n  const { email, name } = user;\r\n  $container.innerHTML = `\r\n  <div id=\"user-information\">\r\n    <p id=\"name\">${name}</p>\r\n    <p id=\"email\">${email}</p>\r\n  </div>\r\n  <div id=\"account-actions\">\r\n    <a>Profile</a>\r\n    <a id=\"signout-button\">Sign out</a>\r\n  </div>\r\n`;\r\n  const $signOutButton = document.getElementById(\r\n    \"signout-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  const handleSignUpButtonClick = () => {\r\n    doSignOut().then((result) => {\r\n      if (result.ok) {\r\n        updatePage(\"login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  $signOutButton.addEventListener(\"click\", handleSignUpButtonClick);\r\n}\r\n\r\nfunction $renderLoginRequire(props: { $container: HTMLElement }) {\r\n  const { $container } = props;\r\n  $container.innerHTML = `\r\n    <div id=\"login-require\">\r\n      <button id=\"login-button\">LOG IN</button>\r\n    </div>\r\n`;\r\n  const $loginButton = document.getElementById(\r\n    \"login-button\"\r\n  ) as HTMLButtonElement;\r\n  const handleLoginButtonClick = () => {\r\n    updatePage(\"login\");\r\n  };\r\n  $loginButton.addEventListener(\"click\", handleLoginButtonClick);\r\n}\r\n\r\nexport function $createButtonElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  content: string;\r\n}): HTMLButtonElement {\r\n  const { id, className, onClick, content } = props;\r\n  const $button = document.createElement(\"button\");\r\n  if (id) {\r\n    $button.id = id;\r\n  }\r\n  if (className) {\r\n    $button.className = className;\r\n  }\r\n  if (onClick) {\r\n    $button.addEventListener(\"click\", onClick);\r\n  }\r\n  $button.appendChild(document.createTextNode(content));\r\n  return $button;\r\n}\r\n\r\nexport function $createParagraphElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  text: string;\r\n  type: string;\r\n}) {\r\n  const { className, text, type } = props;\r\n  const $element = document.createElement(type);\r\n  if (className) {\r\n    $element.className = className;\r\n  }\r\n  $element.appendChild(document.createTextNode(text));\r\n  return $element;\r\n}\r\n\r\nexport function $createInputElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  placeholder?: string;\r\n  value?: string;\r\n  onSubmit?: (v: string) => Promise<void>;\r\n}): HTMLInputElement {\r\n  const { id, className, placeholder, value, onSubmit } = props;\r\n  const $input = document.createElement(`input`);\r\n  if (id) {\r\n    $input.id = id;\r\n  }\r\n  if (className) {\r\n    $input.className = className;\r\n  }\r\n  if (placeholder) {\r\n    $input.placeholder = placeholder;\r\n  }\r\n  if (value) {\r\n    $input.value = value;\r\n  }\r\n  if (onSubmit) {\r\n    $input.addEventListener(\"keypress\", (ev: KeyboardEvent) => {\r\n      if (ev.key == \"Enter\") {\r\n        onSubmit($input.value).then(() => {\r\n          $input.value = ``;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return $input;\r\n}\r\n\r\nexport function keyInputListener(ev: KeyboardEvent, onSubmit: () => void) {\r\n  if (ev.key == \"Enter\") {\r\n    onSubmit();\r\n  }\r\n}\r\n\r\nexport function $createContainer(props: {\r\n  id?: string;\r\n  className?: string;\r\n  $elements?: HTMLElement[];\r\n}): HTMLElement {\r\n  const { $elements, className, id } = props;\r\n  const $container = document.createElement(\"div\");\r\n\r\n  if (id) {\r\n    $container.id = id;\r\n  }\r\n\r\n  if (className) {\r\n    $container.className = className;\r\n  }\r\n\r\n  if ($elements) {\r\n    $elements.map(($element) => {\r\n      $container.appendChild($element);\r\n    });\r\n  }\r\n\r\n  return $container;\r\n}\r\n\r\nexport let serverUrl = process.env.SERVER_URL as string;\r\nconsole.log(serverUrl);\r\nexport const isDevMode: boolean =\r\n  process.env.NODE_ENV?.includes(\"DEV\") || false;\r\n\r\nexport const isLocalMode: boolean =\r\n  process.env.NODE_ENV?.toString().includes(\"LOCAL\") || false;\r\n\r\nif (isLocalMode) {\r\n  serverUrl = \"http://localhost\";\r\n  console.log(`app is local mode server url : ${serverUrl}`);\r\n} else if (isDevMode) {\r\n  // init dev mode\r\n  console.log(`app is dev mode`);\r\n  fetch(serverUrl).then((res) => {\r\n    if (res.ok) {\r\n      console.log(`server activated`);\r\n    } else {\r\n      console.log(`server not responde, using localhost`);\r\n      serverUrl = \"http://localhost\";\r\n    }\r\n  });\r\n}\r\n","type RestMethod = \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\r\n\r\nfunction getRequestOptions(method: RestMethod, body?: Object): RequestInit {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  if (!token) {\r\n    throw `please login first`;\r\n  }\r\n  const headers: AuthHeader = {\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n\r\n  if (body) {\r\n    return {\r\n      method,\r\n      headers: {\r\n        Authorization: `Bearer ${token}`,\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify(body),\r\n    };\r\n  } else {\r\n    return {\r\n      method,\r\n      headers,\r\n    };\r\n  }\r\n}\r\n\r\nexport async function doGetRequest<T>(url: string): Promise<T> {\r\n  console.log(`get request to ${url}`);\r\n  const response = await fetch(url, getRequestOptions(\"GET\"));\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.json());\r\n  }\r\n\r\n  const result = (await response.json()) as HttpResponse<T>;\r\n  if (!result.ok || !result.data) {\r\n    throw result.error_message;\r\n  }\r\n  return result.data;\r\n}\r\n\r\nexport async function doPostRequest<T>(args: {\r\n  url: string;\r\n  body: Object;\r\n}): Promise<T> {\r\n  const { body, url } = args;\r\n  console.log(`post request to ${url}`);\r\n  const response = await fetch(url, getRequestOptions(\"POST\", body));\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`cannot fetch request to ${url}`);\r\n  }\r\n\r\n  const result = (await response.json()) as HttpResponse<T>;\r\n\r\n  if (!result.ok || !result.data) {\r\n    throw new Error(result.error_message);\r\n  }\r\n\r\n  return result.data;\r\n}\r\n\r\nexport async function doDeleteRequest<T>(args: { url: string }) {\r\n  const { url } = args;\r\n  console.log(`delete request to ${url}`);\r\n  const response = await fetch(url, getRequestOptions(\"DELETE\"));\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`cannot fetch request to ${url}`);\r\n  }\r\n\r\n  const result = (await response.json()) as HttpResponse<T>;\r\n\r\n  if (!result.ok || !result.data) {\r\n    throw new Error(result.error_message);\r\n  }\r\n\r\n  return result.data;\r\n}\r\n\r\nexport async function doPutRequest<T>(args: { url: string; body: Object }) {\r\n  const { body, url } = args;\r\n  console.log(`put request to ${url}`);\r\n  const response = await fetch(url, getRequestOptions(\"PUT\", body));\r\n\r\n  if (!response.ok) {\r\n    throw new Error(`cannot fetch request to ${url}`);\r\n  }\r\n\r\n  const result = (await response.json()) as HttpResponse<T>;\r\n\r\n  if (!result.ok || !result.data) {\r\n    throw new Error(result.error_message);\r\n  }\r\n  console.log(`put request done / ${url}`);\r\n\r\n  return result.data;\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doGetRequest } from \"../HttpsModles\";\r\n\r\nexport async function doSignOut(): Promise<ActionResult> {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  return {\r\n    ok: true,\r\n    message: `user sign out`,\r\n  };\r\n}\r\n\r\nexport function isLoggedIn(user: User | null): boolean {\r\n  return user ? true : false;\r\n}\r\n\r\nexport const getUser = async (): Promise<User | null> => {\r\n  const url = `${serverUrl}/auth/user`;\r\n  const result = await doGetRequest<User>(url).catch((err_message) => {\r\n    console.error(err_message);\r\n    return null;\r\n  });\r\n\r\n  return result;\r\n};\r\n\r\nexport function isLoginFormFormatted(args: LoginRequest): boolean {\r\n  const { email, password } = args;\r\n  return email != \"\" && password != \"\";\r\n}\r\n","import { isLoginFormFormatted } from \".\";\r\nimport { serverUrl } from \"../../App\";\r\n\r\nexport async function doLoginWithEmailAndPassword(\r\n  request: LoginRequest\r\n): Promise<ActionResult> {\r\n  if (!isLoginFormFormatted(request)) {\r\n    throw \"Please fill the blanks\";\r\n  }\r\n\r\n  const url = `${serverUrl}/auth/login`;\r\n  const response = await fetch(url, {\r\n    method: \"post\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(request),\r\n  });\r\n\r\n  const result = (await response.json()) as HttpResponse<LoginResult>;\r\n\r\n  const token = result.data?.access_token;\r\n  if (token) {\r\n    localStorage.setItem(\"jwtToken\", token);\r\n    return {\r\n      ok: true,\r\n      message: `Login Success, Welcome ${request.email}`,\r\n    };\r\n  } else {\r\n    return {\r\n      ok: false,\r\n      error_message: `cannot login`,\r\n    };\r\n  }\r\n}\r\n","import { doLoginWithEmailAndPassword } from \"../../modules/auth/login\";\r\nimport { $loginPage, updatePage } from \"../../navigate-page\";\r\n\r\nexport function initLoginPage() {\r\n  const $email = $loginPage.querySelector(\"#email-input\") as HTMLInputElement;\r\n  const $password = $loginPage.querySelector(\r\n    \"#password-input\"\r\n  ) as HTMLInputElement;\r\n\r\n  const $message = document.getElementById(\r\n    \"login-message\"\r\n  ) as HTMLParagraphElement;\r\n  const $loginButton = $loginPage.querySelector(\r\n    \"#login-button\"\r\n  ) as HTMLButtonElement;\r\n  $loginButton.addEventListener(\"click\", doLogin);\r\n\r\n  function doLogin() {\r\n    const email = $email.value;\r\n    const password = $password.value;\r\n    doLoginWithEmailAndPassword({\r\n      email,\r\n      password,\r\n    })\r\n      .catch((err) => {\r\n        $message.textContent = err;\r\n        throw err;\r\n      })\r\n      .then(() => {\r\n        updatePage(\"todos\");\r\n      });\r\n  }\r\n\r\n  const $signupButton = document.getElementById(\r\n    \"signup-button\"\r\n  ) as HTMLButtonElement;\r\n  $signupButton.addEventListener(\"click\", () => updatePage(\"login\"));\r\n}\r\n","import { $loginRequirePage, updatePage } from \"../../navigate-page\";\r\n\r\nexport function initLoginRequirePage() {\r\n  const $loginButton = $loginRequirePage.querySelector(\r\n    \"#login-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $loginButton.addEventListener(\"click\", handleLoginButtonClick);\r\n\r\n  function handleLoginButtonClick() {\r\n    updatePage(\"login\");\r\n  }\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doGetRequest } from \"../HttpsModles\";\r\n\r\nexport async function getGroupsFromUser(userId: string): Promise<Group[]> {\r\n  const url = `${serverUrl}/users/${userId}/groups`;\r\n  const groups = await doGetRequest<Group[]>(url);\r\n  return groups;\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doPostRequest } from \"../HttpsModles\";\r\n\r\nexport async function addGroup(\r\n  request: AddGroupRequest\r\n): Promise<ActionResult> {\r\n  const url = `${serverUrl}/users/${request.userId}/groups`;\r\n\r\n  const result = await doPostRequest<ActionResult>({\r\n    url,\r\n    body: request,\r\n  });\r\n\r\n  console.log(`add group done, ${result.message}`);\r\n  return result;\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doPutRequest } from \"../HttpsModles\";\r\n\r\nexport async function updateGroup(group: Group): Promise<ActionResult> {\r\n  const url = `${serverUrl}/users/${group.owner_id}/groups/${group.group_id}`;\r\n  const result = await doPutRequest<ActionResult>({\r\n    url,\r\n    body: group,\r\n  });\r\n\r\n  return result;\r\n}\r\n","import { serverUrl } from \"../../App\";\r\n\r\nexport * from \"./get-group\";\r\nexport * from \"./add-group\";\r\nexport * from \"./update-group\";\r\n","import { serverUrl } from \"../../App\";\r\nimport { doGetRequest } from \"../HttpsModles\";\r\n\r\nexport async function getTodos(filter: TodosFilter): Promise<Todo[]> {\r\n  let url = `${serverUrl}/todos?user_id=${filter.userId}`;\r\n  if (filter.groupId) {\r\n    url += `&group_id=${filter.groupId}`;\r\n  }\r\n\r\n  const todos = await doGetRequest<Todo[]>(url);\r\n  return todos;\r\n}\r\n\r\nexport async function getTodo(todoId: string): Promise<Todo> {\r\n  let url = `${serverUrl}/todos/${todoId}`;\r\n\r\n  const todo = await doGetRequest<Todo>(url);\r\n  return todo;\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doPostRequest } from \"../HttpsModles\";\r\n\r\nexport const addTodo = async (\r\n  request: AddTodoRequest\r\n): Promise<ActionResult> => {\r\n  const url = `${serverUrl}/todos`;\r\n  const result = await doPostRequest<ActionResult>({\r\n    url,\r\n    body: request,\r\n  });\r\n\r\n  return result;\r\n};\r\n","import { serverUrl } from \"../../App\";\r\nimport { doDeleteRequest } from \"../HttpsModles\";\r\n\r\nexport async function deleteTodo(todoId: string): Promise<ActionResult> {\r\n  const url = `${serverUrl}/todos/${todoId}`;\r\n  const result = await doDeleteRequest<ActionResult>({\r\n    url,\r\n  });\r\n  return result;\r\n}\r\n","export function getFilter(query: string): TodosFilter {\r\n  const urlParams = new URLSearchParams(query);\r\n  const userId = urlParams.get(\"user_id\");\r\n  if (!userId) {\r\n    throw new Error(\"Cannot parse user id\");\r\n  }\r\n  const filter: TodosFilter = {\r\n    userId,\r\n  };\r\n  const groupId = urlParams.get(\"group_id\");\r\n  if (groupId) {\r\n    filter.groupId = groupId;\r\n  }\r\n  return filter;\r\n}\r\n\r\nexport function getEndTimeListFromTodos(\r\n  todoItems: Todo[]\r\n): Array<number | null> {\r\n  return [...new Set(todoItems.map((todoItem) => todoItem.limit_datetime))];\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doPutRequest } from \"../HttpsModles\";\r\n\r\nexport async function updateTodo(todo: Todo): Promise<ActionResult> {\r\n  const url = `${serverUrl}/todos/${todo.todo_id}`;\r\n  const result = await doPutRequest<ActionResult>({\r\n    url,\r\n    body: todo,\r\n  });\r\n\r\n  return result;\r\n}\r\n","export * from \"./get-todo\";\r\nexport * from \"./add-todo\";\r\nexport * from \"./delete-todo\";\r\nexport * from \"./todo.utils\";\r\nexport * from \"./update-todo\";\r\n","import { getGroupIdFromUrl } from \".\";\r\nimport { addGroup } from \"../../modules/groups\";\r\n\r\nexport function $initialNavContainer(args: {\r\n  userId: string;\r\n  onUpdate: () => void;\r\n}) {\r\n  const { userId } = args;\r\n  const $createGroupButton = document.getElementById(\r\n    \"create-group-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $createGroupButton.addEventListener(\"click\", () => {\r\n    const groupName = prompt(`new group name`, `GROUP NAME`);\r\n    if (groupName) {\r\n      addGroup({ groupName, userId }).then(args.onUpdate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function $updateNavItems(props: {\r\n  userId: string;\r\n  groups: Group[];\r\n  onUpdate: () => void;\r\n}) {\r\n  const { groups, userId } = props;\r\n\r\n  const $groups = document.getElementById(\"group-list\") as HTMLElement;\r\n  $groups.innerHTML = ``;\r\n  $groups.style.display = `block`;\r\n\r\n  const $groupNavMessage = document.querySelector(\r\n    \"#nav-group-container > .nav-message\"\r\n  ) as HTMLParagraphElement;\r\n  $groupNavMessage.textContent = \"\";\r\n  $groupNavMessage.style.display = `none`;\r\n\r\n  groups.forEach((group) => {\r\n    const $navItem = document.createElement(\"li\") as HTMLElement;\r\n    const path = getGroupIdFromUrl();\r\n    $navItem.className = `nav-item ${path == group.group_id && `selected`}`;\r\n    $navItem.id = `nav-${group.group_id}`;\r\n    $navItem.innerHTML = `\r\n          <label class=\"nav-symbol\">🗹</label>\r\n          <p>${group.group_name}</p>\r\n        `;\r\n    $navItem.addEventListener(\"click\", () => {\r\n      history.pushState(\r\n        {},\r\n        \"\",\r\n        `?page=todos&user_id=${userId}&group_id=${group.group_id}`\r\n      );\r\n      props.onUpdate();\r\n    });\r\n    $groups.appendChild($navItem);\r\n  });\r\n}\r\n","export function setEnterInputListener(ev: KeyboardEvent, callback: () => void) {\r\n  if (ev.key == \"Enter\") {\r\n    callback();\r\n  }\r\n}\r\n","export function convertTimestampToString(timestamp: number): string {\r\n  const date = new Date(timestamp);\r\n  return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n}\r\n\r\nexport function convertStringToTimestamp(dateString: string): number {\r\n  const dateArgs = dateString\r\n    .split(\"/\")\r\n    .join(\"\")\r\n    .split(\".\")\r\n    .join(\"\")\r\n    .split(\"-\")\r\n    .map((t) => parseInt(t));\r\n  return new Date(dateArgs[0], dateArgs[1] - 1, dateArgs[2]).getTime();\r\n}\r\n","import { $setAlertMessage, getUserIdFromUrl, getGroupIdFromUrl } from \"..\";\r\nimport { setEnterInputListener } from \"../../../modules/DocumnetModules\";\r\nimport { convertStringToTimestamp } from \"../../../modules/TimeModules\";\r\nimport { addTodo } from \"../../../modules/todo\";\r\n\r\nexport function $initialAddTodoForm(args: { onUpdate: () => void }) {\r\n  const $addingForm = document.getElementById(\r\n    \"add-todo-container\"\r\n  ) as HTMLElement;\r\n  const $addTodoInput = document.getElementById(\r\n    \"add-todo-input\"\r\n  ) as HTMLInputElement;\r\n  const $dateSelect = $addingForm.querySelector(\r\n    \"#date-select\"\r\n  ) as HTMLInputElement;\r\n\r\n  $addTodoInput.addEventListener(\"keypress\", (ev) =>\r\n    setEnterInputListener(ev, submitTodo)\r\n  );\r\n\r\n  function submitTodo() {\r\n    $setAlertMessage(\"\");\r\n\r\n    const userId = getUserIdFromUrl();\r\n    if (!userId) {\r\n      throw `cannot parse user id`;\r\n    }\r\n\r\n    const groupId = getGroupIdFromUrl();\r\n\r\n    const content = $addTodoInput.value;\r\n    $addTodoInput.value = \"\";\r\n    if (!content) {\r\n      $setAlertMessage(\"Can't create todo with no content\");\r\n      return;\r\n    }\r\n\r\n    const limitDatetime =\r\n      $dateSelect.value != \"\"\r\n        ? convertStringToTimestamp($dateSelect.value)\r\n        : null;\r\n\r\n    addTodo({\r\n      content,\r\n      limitDatetime,\r\n      groupId,\r\n      ownerId: userId,\r\n      parentTodoId: null,\r\n    }).then((result) => {\r\n      if (result.ok) {\r\n        args.onUpdate();\r\n      } else {\r\n        throw result.error_message;\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { serverUrl } from \"../../App\";\r\nimport { doDeleteRequest } from \"../HttpsModles\";\r\n\r\nexport async function deleteGroup(userId: string, groupId: string) {\r\n  const url = `${serverUrl}/users/${userId}/groups/${groupId}`;\r\n  const result = await doDeleteRequest<ActionResult>({\r\n    url,\r\n  });\r\n  return result;\r\n}\r\n","import { keyInputListener } from \"../../../App\";\r\nimport { convertTimestampToString } from \"../../../modules/TimeModules\";\r\nimport { deleteTodo, updateTodo } from \"../../../modules/todo\";\r\n\r\nexport function $TodoItem(todo: Todo, onUpdate: () => void): HTMLElement {\r\n  const $todoItem = document.createElement(\"div\");\r\n  $todoItem.id = `todo-${todo.todo_id}`;\r\n  $todoItem.className = `todo`;\r\n  $todoItem.innerHTML = `\r\n    <label class=\"todo-content-container\" class=\"${\r\n      todo.complete_datetime ? \"done\" : \"\"\r\n    }\">\r\n      <p class=\"date\">\r\n        ${\r\n          todo.limit_datetime\r\n            ? convertTimestampToString(todo.limit_datetime)\r\n            : \"-\"\r\n        }\r\n      </p>\r\n      <p class=\"content\">${todo.content}</p>\r\n      <div class=\"content-edit-container unactive\">\r\n        <p class=\"icon\">✎ </p>\r\n        <input class=\"content-edit\" value=\"${\r\n          todo.content\r\n        }\" placeholder=\"...content here\" />\r\n      </div>\r\n    </label>\r\n    <div class=\"action-buttons\" class=\"${todo.complete_datetime ? \"done\" : \"\"}\">\r\n      <button class=\"edit-button text-button\">✎</button>\r\n      <button class=\"done-button text-button\">✓</button>\r\n      <button class=\"delete-button text-button\">✖</button>\r\n    </div>\r\n  `;\r\n\r\n  // content\r\n  const $content = $todoItem.querySelector(\"#content\") as HTMLElement;\r\n  const $contentEditContainer = $todoItem.querySelector(\r\n    \".content-edit-container\"\r\n  ) as HTMLElement;\r\n  const $contentEdit = $todoItem.querySelector(\r\n    \".content-edit\"\r\n  ) as HTMLInputElement;\r\n  $contentEdit.onblur = unsetContentEditMode;\r\n  $contentEdit.addEventListener(\"keypress\", (ev) => {\r\n    keyInputListener(ev, () => {\r\n      if (todo.content != $contentEdit.value) {\r\n        todo.content = $contentEdit.value;\r\n        updateTodo(todo).then(onUpdate);\r\n      } else {\r\n        unsetContentEditMode();\r\n      }\r\n    });\r\n  });\r\n\r\n  // delete button\r\n  const $deleteButton = $todoItem.querySelector(\r\n    \".delete-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $deleteButton.addEventListener(\"click\", () =>\r\n    deleteTodo(todo.todo_id).then(onUpdate)\r\n  );\r\n\r\n  // edit button\r\n  const $editButton = $todoItem.querySelector(\r\n    \".edit-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $editButton.addEventListener(\"click\", () => {\r\n    setContentEditMode();\r\n  });\r\n\r\n  function setContentEditMode() {\r\n    $contentEditContainer.className = \"active\";\r\n    $contentEditContainer.style.display = \"flex\";\r\n    $content.className = \"unactive\";\r\n    $contentEdit.value = todo.content;\r\n    $contentEdit.focus();\r\n  }\r\n\r\n  function unsetContentEditMode() {\r\n    $contentEditContainer.className = \"unactive\";\r\n    $contentEditContainer.style.display = \"none\";\r\n    $content.className = \"active\";\r\n  }\r\n\r\n  const $doneButton = $todoItem.querySelector(\r\n    `.done-button`\r\n  ) as HTMLButtonElement;\r\n  $doneButton.addEventListener(\"click\", () => {\r\n    todo.complete_datetime = new Date().getTime();\r\n    updateTodo(todo).then(onUpdate);\r\n  });\r\n\r\n  return $todoItem;\r\n}\r\n","import { setEnterInputListener } from \"../../../modules/DocumnetModules\";\r\nimport { updateGroup } from \"../../../modules/groups\";\r\nimport { deleteGroup } from \"../../../modules/groups/delete-group\";\r\nimport { $mainPage, updatePage } from \"../../../navigate-page\";\r\nimport { $TodoItem } from \"./todo.item\";\r\n\r\nexport async function $updateTodolist(args: {\r\n  todos: Todo[];\r\n  onUpdate: () => void;\r\n}) {\r\n  const { todos } = args;\r\n  const $todolist = $mainPage.querySelector(\".todolist\") as HTMLDivElement;\r\n  $todolist.innerHTML = \"\";\r\n\r\n  todos.map((todoItem) => {\r\n    $todolist.appendChild($TodoItem(todoItem, args.onUpdate));\r\n  });\r\n}\r\n\r\nexport function $updateTitle(args: {\r\n  title: string;\r\n  group?: Group;\r\n  onUpdate: () => void;\r\n}) {\r\n  const { title, group } = args;\r\n  const $title = document.getElementById(`todo-container-title`) as HTMLElement;\r\n  const $editTitle = document.getElementById(\r\n    `todo-container-title-edit`\r\n  ) as HTMLInputElement;\r\n\r\n  $title.textContent = title;\r\n  $editTitle.value = title;\r\n  $editTitle.onblur = unsetEditTitleMode;\r\n  unsetEditTitleMode();\r\n  $editTitle.onkeypress = (ev) => {\r\n    setEnterInputListener(ev, () => {\r\n      if (group) {\r\n        console.log(`update group`);\r\n        const title = $editTitle.value;\r\n        group.group_name = title;\r\n        updateGroup(group)\r\n          .then(args.onUpdate)\r\n          .catch((e) => {\r\n            console.error(e);\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  const $editButton = document.getElementById(\r\n    \"title-edit-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $editButton.onclick = setEditTitleMode;\r\n  function setEditTitleMode() {\r\n    if (!group) {\r\n      return;\r\n    }\r\n    $title.style.display = \"none\";\r\n    $editTitle.style.display = `block`;\r\n\r\n    $editTitle.focus();\r\n  }\r\n\r\n  function unsetEditTitleMode() {\r\n    $title.style.display = `block`;\r\n    $editTitle.style.display = `none`;\r\n    $editTitle.value = title;\r\n  }\r\n\r\n  const $deleteButton = document.getElementById(\r\n    \"title-delete-button\"\r\n  ) as HTMLButtonElement;\r\n  $deleteButton.onclick = () => {\r\n    console.log(`damn`);\r\n    if (group) {\r\n      console.log(`delete todo`);\r\n      deleteGroup(group.owner_id, group.group_id).then(() => {\r\n        updatePage(\"todos\");\r\n      });\r\n    }\r\n  };\r\n  // $deleteButton.addEventListener(\"click\", , {});\r\n}\r\n","import { group } from \"console\";\r\nimport { stringify } from \"querystring\";\r\nimport { $renderAccountState } from \"../../App\";\r\nimport { getUser } from \"../../modules/auth\";\r\nimport { getGroupsFromUser } from \"../../modules/groups\";\r\nimport { getFilter, getTodos } from \"../../modules/todo\";\r\nimport { updatePage } from \"../../navigate-page\";\r\nimport { $initialNavContainer, $updateNavItems } from \"./nav\";\r\n\r\nimport { $initialAddTodoForm } from \"./todo/todo.add-form\";\r\nimport { $updateTitle, $updateTodolist } from \"./todo/todo.list\";\r\n\r\nlet user: User | null;\r\n\r\nexport async function initTodoPage() {\r\n  user = await getUser();\r\n\r\n  if (user) {\r\n    history.pushState({}, \"\", `?page=todos&user_id=${user.uid}`);\r\n\r\n    $initialAccountState(user);\r\n    $initialNavContainer({ userId: user.uid, onUpdate: $updateView });\r\n\r\n    $updateView();\r\n  } else {\r\n    updatePage(\"login-require\");\r\n  }\r\n}\r\n\r\nfunction $initialAccountState(user: User) {\r\n  (document.getElementById(\"todo-page\") as HTMLElement).style.display = \"flex\";\r\n  const $accountContainer = document.getElementById(\r\n    \"account-container\"\r\n  ) as HTMLElement;\r\n  $renderAccountState({ $container: $accountContainer, user });\r\n}\r\n\r\nasync function $updateView() {\r\n  if (!user) {\r\n    updatePage(\"login-require\");\r\n    return;\r\n  }\r\n\r\n  const filter = getFilter(window.location.search);\r\n  const [groups, todos] = await Promise.all([\r\n    getGroupsFromUser(user.uid),\r\n    getTodos(filter),\r\n  ]);\r\n\r\n  $updateNavItems({\r\n    groups,\r\n    userId: user.uid,\r\n    onUpdate: $updateView,\r\n  });\r\n\r\n  $updateTodolist({ todos, onUpdate: $updateView });\r\n  const group = groups.find((g) => g.group_id == filter.groupId);\r\n  if (group) {\r\n    $updateTitle({\r\n      title: group.group_name,\r\n      group: group,\r\n      onUpdate: $updateView,\r\n    });\r\n  } else {\r\n    $updateTitle({\r\n      title: \"All todos\",\r\n      onUpdate: $updateView,\r\n    });\r\n  }\r\n\r\n  $initialAddTodoForm({ onUpdate: $updateView });\r\n}\r\n\r\nexport function getUserIdFromUrl(): string | null {\r\n  return new URL(location.href).searchParams.get(\"user_id\");\r\n}\r\n\r\nexport function getGroupIdFromUrl(): string | null {\r\n  return new URL(location.href).searchParams.get(\"group_id\");\r\n}\r\n\r\nconst $alertMessage = document.getElementById(\r\n  \"alert-message\"\r\n) as HTMLParagraphElement;\r\n\r\nexport function $setAlertMessage(message: string) {\r\n  $alertMessage.textContent = message;\r\n}\r\n","import { initLoginPage } from \"./pages/login-page\";\r\nimport { initLoginRequirePage } from \"./pages/login-require-page\";\r\nimport { initTodoPage } from \"./pages/todo-page\";\r\n\r\ntype PagePath = \"todos\" | \"login\" | \"login-require\";\r\n\r\nexport const $mainPage = document.getElementById(\"todo-page\") as HTMLDivElement;\r\n\r\nexport const $loginPage = document.getElementById(\r\n  \"login-page\"\r\n) as HTMLDivElement;\r\n\r\nexport const $loginRequirePage = document.getElementById(\r\n  \"login-require-page\"\r\n) as HTMLDivElement;\r\n\r\nconst $pages = [$mainPage, $loginPage, $loginRequirePage];\r\n\r\n// initial script\r\nupdatePage(\"todos\");\r\n\r\nexport function getPagePath(search: string): PagePath {\r\n  return new URLSearchParams(search).get(\"page\") as PagePath;\r\n}\r\n\r\nexport function updatePage(page: PagePath) {\r\n  const isLocal = location.hostname == \"localhost\";\r\n  console.log(`isLocal : ${isLocal}`);\r\n\r\n  history.pushState({ hello: \"world\" }, \"hello\", `?page=${page}`);\r\n\r\n  $pages.forEach(($page) => {\r\n    $page.className = \"page\";\r\n  });\r\n\r\n  const path = getPagePath(location.search);\r\n  switch (path) {\r\n    case \"todos\":\r\n      $mainPage.classList.add(\"active\");\r\n      initTodoPage();\r\n      break;\r\n\r\n    case \"login\":\r\n      $loginPage.classList.add(\"active\");\r\n      initLoginPage();\r\n      break;\r\n\r\n    case \"login-require\":\r\n      $loginRequirePage.classList.add(\"active\");\r\n      initLoginRequirePage();\r\n      break;\r\n\r\n    // default:\r\n    //   console.log(\"404\");\r\n    //   updatePage(\"todos\");\r\n  }\r\n}\r\n","import \"./navigate-page\";\r\n"]}