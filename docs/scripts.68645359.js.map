{"version":3,"sources":["scripts/App.ts","scripts/modules/AuthModules.ts","scripts/pages/login-page/index.ts","scripts/pages/login-require-page/index.ts","scripts/modules/HttpsModles.ts","scripts/modules/TodoModules.ts","scripts/pages/todo-page/nav.ts","scripts/modules/TimeModules.ts","scripts/pages/todo-page/todo/todo.add-form.ts","scripts/modules/DocumnetModules.ts","scripts/pages/todo-page/todo/todo.item.ts","scripts/pages/todo-page/todo/todo.list.ts","scripts/pages/todo-page/index.ts","scripts/navigate-page.ts","scripts/index.ts"],"names":[],"mappings":"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","file":"scripts.68645359.js","sourceRoot":"..\\frontend\\src","sourcesContent":["import { doSignOut } from \"./modules/AuthModules\";\r\nimport { updatePage } from \"./navigate-page\";\r\n\r\nexport function $renderAccountState(props: {\r\n  $container: HTMLElement;\r\n  user: User | null;\r\n}) {\r\n  const { $container, user } = props;\r\n  if (user) {\r\n    $renderUserState({ $container, user });\r\n  } else {\r\n    $renderLoginRequire({ $container });\r\n  }\r\n}\r\n\r\nfunction $renderUserState(props: { $container: HTMLElement; user: User }) {\r\n  const { user, $container } = props;\r\n  const { email, name } = user;\r\n  $container.innerHTML = `\r\n  <div id=\"user-information\">\r\n    <p id=\"name\">${name}</p>\r\n    <p id=\"email\">${email}</p>\r\n  </div>\r\n  <div id=\"account-actions\">\r\n    <a>Profile</a>\r\n    <a id=\"signout-button\">Sign out</a>\r\n  </div>\r\n`;\r\n  const $signOutButton = document.getElementById(\r\n    \"signout-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  const handleSignUpButtonClick = () => {\r\n    doSignOut().then((result) => {\r\n      if (result.ok) {\r\n        updatePage(\"/login\");\r\n      }\r\n    });\r\n  };\r\n\r\n  $signOutButton.addEventListener(\"click\", handleSignUpButtonClick);\r\n}\r\n\r\nfunction $renderLoginRequire(props: { $container: HTMLElement }) {\r\n  const { $container } = props;\r\n  $container.innerHTML = `\r\n    <div id=\"login-require\">\r\n      <button id=\"login-button\">LOG IN</button>\r\n    </div>\r\n`;\r\n  const $loginButton = document.getElementById(\r\n    \"login-button\"\r\n  ) as HTMLButtonElement;\r\n  const handleLoginButtonClick = () => {\r\n    updatePage(\"/login\");\r\n  };\r\n  $loginButton.addEventListener(\"click\", handleLoginButtonClick);\r\n}\r\n\r\nexport function $createButtonElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  content: string;\r\n}): HTMLButtonElement {\r\n  const { id, className, onClick, content } = props;\r\n  const $button = document.createElement(\"button\");\r\n  if (id) {\r\n    $button.id = id;\r\n  }\r\n  if (className) {\r\n    $button.className = className;\r\n  }\r\n  if (onClick) {\r\n    $button.addEventListener(\"click\", onClick);\r\n  }\r\n  $button.appendChild(document.createTextNode(content));\r\n  return $button;\r\n}\r\n\r\nexport function $createParagraphElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  text: string;\r\n  type: string;\r\n}) {\r\n  const { className, text, type } = props;\r\n  const $element = document.createElement(type);\r\n  if (className) {\r\n    $element.className = className;\r\n  }\r\n  $element.appendChild(document.createTextNode(text));\r\n  return $element;\r\n}\r\n\r\nexport function $createInputElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  placeholder?: string;\r\n  value?: string;\r\n  onSubmit?: (v: string) => Promise<void>;\r\n}): HTMLInputElement {\r\n  const { id, className, placeholder, value, onSubmit } = props;\r\n  const $input = document.createElement(`input`);\r\n  if (id) {\r\n    $input.id = id;\r\n  }\r\n  if (className) {\r\n    $input.className = className;\r\n  }\r\n  if (placeholder) {\r\n    $input.placeholder = placeholder;\r\n  }\r\n  if (value) {\r\n    $input.value = value;\r\n  }\r\n  if (onSubmit) {\r\n    $input.addEventListener(\"keypress\", (ev: KeyboardEvent) => {\r\n      if (ev.key == \"Enter\") {\r\n        onSubmit($input.value).then(() => {\r\n          $input.value = ``;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return $input;\r\n}\r\n\r\nexport function keyInputListener(ev: KeyboardEvent, onSubmit: () => void) {\r\n  if (ev.key == \"Enter\") {\r\n    onSubmit();\r\n  }\r\n}\r\n\r\nexport function $createContainer(props: {\r\n  id?: string;\r\n  className?: string;\r\n  $elements?: HTMLElement[];\r\n}): HTMLElement {\r\n  const { $elements, className, id } = props;\r\n  const $container = document.createElement(\"div\");\r\n\r\n  if (id) {\r\n    $container.id = id;\r\n  }\r\n\r\n  if (className) {\r\n    $container.className = className;\r\n  }\r\n\r\n  if ($elements) {\r\n    $elements.map(($element) => {\r\n      $container.appendChild($element);\r\n    });\r\n  }\r\n\r\n  return $container;\r\n}\r\n\r\nexport let serverUrl = process.env.SERVER_URL as string;\r\nconsole.log(serverUrl);\r\nexport const isDevMode: boolean =\r\n  process.env.NODE_ENV?.includes(\"DEV\") || false;\r\n\r\nexport const isLocalMode: boolean =\r\n  process.env.NODE_ENV?.toString().includes(\"LOCAL\") || false;\r\n\r\nif (isLocalMode) {\r\n  serverUrl = \"http://localhost\";\r\n  console.log(`app is local mode server url : ${serverUrl}`);\r\n} else if (isDevMode) {\r\n  // init dev mode\r\n  console.log(`app is dev mode`);\r\n  fetch(serverUrl).then((res) => {\r\n    if (res.ok) {\r\n      console.log(`server activated`);\r\n    } else {\r\n      console.log(`server not responde, using localhost`);\r\n      serverUrl = \"http://localhost\";\r\n    }\r\n  });\r\n}\r\n","import { serverUrl } from \"../App\";\r\n\r\nexport function getAuthHeader(): AuthHeader | null {\r\n  const token = localStorage.getItem(\"jwtToken\") || null;\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n}\r\n\r\nexport async function doLoginWithEmailAndPassword(request: LoginRequest) {\r\n  if (!isLoginFormFormatted(request)) {\r\n    throw \"Please fill the blanks\";\r\n  }\r\n  const url = `${serverUrl}/auth`;\r\n  const response = await fetch(url, createPostOption(request));\r\n\r\n  if (response.ok) {\r\n    const result = ((await response.json()) as unknown) as LoginResult;\r\n    localStorage.setItem(\"jwtToken\", result.access_token);\r\n  } else {\r\n    const result = await response.json();\r\n    throw result.message;\r\n  }\r\n}\r\n\r\nexport async function doSignOut(): Promise<ActionResult> {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  return {\r\n    ok: true,\r\n    message: `user sign out`,\r\n  };\r\n}\r\n\r\nexport const doSignUp = async (\r\n  request: SignUpRequest\r\n): Promise<ActionResult> => {\r\n  const url = serverUrl + \"auth/signup\";\r\n  const response = await fetch(url, createPostOption(request));\r\n  if (!response.ok) {\r\n    throw new Error(\"signup-failed\");\r\n  }\r\n  const result = ((await response.json()) as unknown) as LoginResult;\r\n\r\n  localStorage.setItem(\"jwtToken\", result.access_token);\r\n  console.log(`signup done`);\r\n  return {\r\n    ok: true,\r\n    message: `signup ok`,\r\n  };\r\n};\r\n\r\nexport function isLoggedIn(user: User | null): boolean {\r\n  return user ? true : false;\r\n}\r\n\r\nexport const getUser = async (): Promise<User | null> => {\r\n  const url = `${serverUrl}/auth/user`;\r\n  const headers = getAuthHeader();\r\n  if (!headers) {\r\n    return null;\r\n  }\r\n\r\n  const response = await fetch(url, {\r\n    headers,\r\n  });\r\n\r\n  const result = (await response.json()) as User;\r\n  return result.email && result.uid ? result : null;\r\n};\r\n\r\nexport const createPostOption = (body: Object): RequestInit => {\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  };\r\n};\r\n\r\nexport const createAuthPostOption = (body: Object): RequestInit => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  };\r\n};\r\n\r\nexport function isLoginFormFormatted(args: LoginRequest): boolean {\r\n  const { email, password } = args;\r\n  return email != \"\" && password != \"\";\r\n}\r\n","import { doLoginWithEmailAndPassword } from \"../../modules/AuthModules\";\r\nimport { $loginPage, updatePage } from \"../../navigate-page\";\r\n\r\nexport function initLoginPage() {\r\n  const $email = $loginPage.querySelector(\"#email-input\") as HTMLInputElement;\r\n  const $password = $loginPage.querySelector(\r\n    \"#password-input\"\r\n  ) as HTMLInputElement;\r\n\r\n  const $message = document.getElementById(\r\n    \"login-message\"\r\n  ) as HTMLParagraphElement;\r\n  const $loginButton = $loginPage.querySelector(\r\n    \"#login-button\"\r\n  ) as HTMLButtonElement;\r\n  $loginButton.addEventListener(\"click\", doLogin);\r\n\r\n  function doLogin() {\r\n    const email = $email.value;\r\n    const password = $password.value;\r\n    doLoginWithEmailAndPassword({\r\n      email,\r\n      password,\r\n    })\r\n      .catch((err) => {\r\n        $message.textContent = err;\r\n        throw err;\r\n      })\r\n      .then(() => {\r\n        updatePage(\"/todos\");\r\n      });\r\n  }\r\n\r\n  const $signupButton = document.getElementById(\r\n    \"signup-button\"\r\n  ) as HTMLButtonElement;\r\n  $signupButton.addEventListener(\"click\", () => updatePage(\"/login\"));\r\n}\r\n","import { $loginRequirePage, updatePage } from \"../../navigate-page\";\r\n\r\nexport function initLoginRequirePage() {\r\n  const $loginButton = $loginRequirePage.querySelector(\r\n    \"#login-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $loginButton.addEventListener(\"click\", handleLoginButtonClick);\r\n\r\n  function handleLoginButtonClick() {\r\n    updatePage(\"/login\");\r\n  }\r\n}\r\n","import { getAuthHeader } from \"./AuthModules\";\r\n\r\nexport async function doGetRequest<T>(url: string): Promise<T> {\r\n  // set headers\r\n  const headers = getAuthHeader();\r\n  if (!headers) {\r\n    throw `Please login first`;\r\n  }\r\n\r\n  console.log(`get request to ${url}`);\r\n  const response = await fetch(url, { headers });\r\n\r\n  if (!response.ok) {\r\n    throw new Error(await response.json());\r\n  }\r\n\r\n  const result = (await response.json()) as HttpResponse<T>;\r\n\r\n  if (!result.ok || !result.data) {\r\n    throw result.error_message;\r\n  }\r\n\r\n  return result.data;\r\n}\r\n\r\nexport async function doPostRequest<T>() {}\r\n","import { serverUrl } from \"../App\";\r\nimport { getAuthHeader, createAuthPostOption } from \"./AuthModules\";\r\nimport { doGetRequest } from \"./HttpsModles\";\r\n\r\nexport function getFilter(query: string): TodosFilter {\r\n  const urlParams = new URLSearchParams(query);\r\n  const userId = urlParams.get(\"user_id\");\r\n  if (!userId) {\r\n    throw new Error(\"Cannot parse user id\");\r\n  }\r\n  const filter: TodosFilter = {\r\n    userId,\r\n  };\r\n  const groupId = urlParams.get(\"group_id\");\r\n  if (groupId) {\r\n    filter.groupId = groupId;\r\n  }\r\n  return filter;\r\n}\r\n\r\nexport async function getTodos(filter: TodosFilter): Promise<TodoItem[]> {\r\n  let url = `${serverUrl}/todos?user_id=${filter.userId}`;\r\n  if (filter.groupId) {\r\n    url += `&group_id=${filter.groupId}`;\r\n  }\r\n\r\n  const todoItems = await doGetRequest<TodoItem[]>(url);\r\n  return todoItems;\r\n}\r\n\r\nexport const addTodo = async (\r\n  request: AddTodoItemRequest\r\n): Promise<ActionResult> => {\r\n  console.log(\"adding todo\");\r\n  const url = `${serverUrl}/todo`;\r\n\r\n  const result = await fetch(url, createAuthPostOption(request)).then(\r\n    async (resp) => await resp.json()\r\n  );\r\n  console.log(`adding todo done`, result);\r\n\r\n  return {\r\n    ok: true,\r\n    message: \"adding todo done\",\r\n  };\r\n};\r\n\r\nexport const deleteTodoItem = async (request: { id: string }) => {\r\n  const { id } = request;\r\n  const url = serverUrl + `todo/${id}`;\r\n\r\n  const headers = getAuthHeader();\r\n  if (!headers) {\r\n    throw \"please login first\";\r\n  }\r\n\r\n  const resp = await fetch(url, {\r\n    method: \"DELETE\",\r\n    headers,\r\n  });\r\n  const result = await resp.json();\r\n\r\n  console.log(`delete result`, result);\r\n  return result as ActionResult;\r\n};\r\n\r\nexport async function editTodo(todo: TodoItem): Promise<ActionResult> {\r\n  const url = serverUrl + `todo/${todo.id}`;\r\n\r\n  const headers = Object.assign(\r\n    { \"Content-Type\": \"application/json\" },\r\n    getAuthHeader()\r\n  );\r\n\r\n  const resp = await fetch(url, {\r\n    headers,\r\n    method: \"PUT\",\r\n    body: JSON.stringify(todo),\r\n  });\r\n\r\n  if (!resp.ok) {\r\n    return {\r\n      ok: false,\r\n      error_message: await resp.json().then((r) => r.message),\r\n    };\r\n  }\r\n\r\n  const result = await resp.json();\r\n  console.log(`edit todo result`, result);\r\n\r\n  return result;\r\n}\r\n\r\nexport async function completeTodos(ids: string[]): Promise<ActionResult> {\r\n  const url = serverUrl + `todo/complete`;\r\n\r\n  const headers = Object.assign(\r\n    { \"Content-Type\": \"application/json\" },\r\n    getAuthHeader()\r\n  );\r\n\r\n  const resp = await fetch(url, {\r\n    headers,\r\n    method: \"POST\",\r\n    body: JSON.stringify(ids),\r\n  });\r\n\r\n  if (!resp.ok) {\r\n    throw new Error(await resp.json());\r\n  }\r\n\r\n  const result = await resp.json();\r\n  console.log(`complete todos result`, result);\r\n\r\n  return result;\r\n}\r\n\r\nexport async function uncompleteTodos(ids: string[]): Promise<ActionResult> {\r\n  const url = serverUrl + `todo/uncomplete`;\r\n\r\n  const headers = Object.assign(\r\n    { \"Content-Type\": \"application/json\" },\r\n    getAuthHeader()\r\n  );\r\n\r\n  const resp = await fetch(url, {\r\n    headers,\r\n    method: \"POST\",\r\n    body: JSON.stringify(ids),\r\n  });\r\n\r\n  if (!resp.ok) {\r\n    throw new Error(await resp.json());\r\n  }\r\n\r\n  const result = await resp.json();\r\n  console.log(`uncomplete todos result`, result);\r\n\r\n  return result;\r\n}\r\n\r\nexport function getEndTimeListFromTodos(\r\n  todoItems: TodoItem[]\r\n): Array<number | null> {\r\n  return [...new Set(todoItems.map((todoItem) => todoItem.end_time))];\r\n}\r\n\r\nexport async function getGroupsFromUser(userId: string): Promise<Group[]> {\r\n  const url = `${serverUrl}/users/${userId}/groups`;\r\n  const groups = await doGetRequest<Group[]>(url);\r\n  return groups;\r\n}\r\n\r\nexport async function addGroup(props: {\r\n  groupName: string;\r\n}): Promise<ActionResult> {\r\n  const { groupName } = props;\r\n  console.log(`add group with : ${groupName}`);\r\n  const url = serverUrl + `group`;\r\n  const headers = Object.assign(POST_HEADERS, getAuthHeader());\r\n  const request: AddGroupRequest = {\r\n    groupName,\r\n  };\r\n  const response = await fetch(url, {\r\n    method: \"POST\",\r\n    headers,\r\n    body: JSON.stringify(request),\r\n  });\r\n\r\n  const result = (await response.json()) as ActionResult;\r\n  console.log(`add group done, ${result.message}`);\r\n  return result;\r\n}\r\n\r\nconst POST_HEADERS = {\r\n  \"Content-Type\": \"application/json\",\r\n};\r\n","import { getGroupIdFromUrl } from \".\";\r\nimport { addGroup } from \"../../modules/TodoModules\";\r\n\r\nexport function $initialNavContainer(args: { onUpdate: () => void }) {\r\n  const $createGroupButton = document.getElementById(\r\n    \"create-group-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $createGroupButton.addEventListener(\"click\", () => {\r\n    const groupName = prompt(`new group name`, `GROUP NAME`);\r\n    if (groupName) {\r\n      addGroup({ groupName }).then(args.onUpdate);\r\n    }\r\n  });\r\n}\r\n\r\nexport function $updateNavItems(props: {\r\n  userId: string;\r\n  groups: Group[];\r\n  onUpdate: () => void;\r\n}) {\r\n  const { groups, userId } = props;\r\n\r\n  const $groups = document.getElementById(\"group-list\") as HTMLElement;\r\n  $groups.innerHTML = ``;\r\n  $groups.style.display = `block`;\r\n\r\n  const $groupNavMessage = document.querySelector(\r\n    \"#nav-group-container > .nav-message\"\r\n  ) as HTMLParagraphElement;\r\n  $groupNavMessage.textContent = \"\";\r\n  $groupNavMessage.style.display = `none`;\r\n\r\n  groups.forEach((group) => {\r\n    const $navItem = document.createElement(\"li\") as HTMLElement;\r\n    const path = getGroupIdFromUrl();\r\n    $navItem.className = `nav-item ${path == group.group_id && `selected`}`;\r\n    $navItem.id = `nav-${group.group_id}`;\r\n    $navItem.innerHTML = `\r\n          <label class=\"nav-symbol\">🗹</label>\r\n          <p>${group.group_name}</p>\r\n        `;\r\n    $navItem.addEventListener(\"click\", () => {\r\n      history.pushState(\r\n        {},\r\n        \"\",\r\n        `/todos?user_id=${userId}&group_id=${group.group_id}`\r\n      );\r\n      props.onUpdate();\r\n    });\r\n    $groups.appendChild($navItem);\r\n  });\r\n}\r\n","export function convertTimestampToString(timestamp: number): string {\r\n  const date = new Date(timestamp);\r\n  return `${date.getFullYear()}/${date.getMonth() + 1}/${date.getDate()}`;\r\n}\r\n\r\nexport function convertStringToTimestamp(dateString: string): number {\r\n  const dateArgs = dateString\r\n    .split(\"/\")\r\n    .join(\"\")\r\n    .split(\".\")\r\n    .join(\"\")\r\n    .split(\"-\")\r\n    .map((t) => parseInt(t));\r\n  return new Date(dateArgs[0], dateArgs[1] - 1, dateArgs[2]).getTime();\r\n}\r\n","import { $setAlertMessage, getUserIdFromUrl, getGroupIdFromUrl } from \"..\";\r\nimport { convertStringToTimestamp } from \"../../../modules/TimeModules\";\r\nimport { addTodo } from \"../../../modules/TodoModules\";\r\n\r\nexport function $initialAddTodoForm(args: { onUpdate: () => void }) {\r\n  const $addingForm = document.getElementById(\r\n    \"add-todo-container\"\r\n  ) as HTMLElement;\r\n  const $addTodoInput = document.getElementById(\r\n    \"add-todo-input\"\r\n  ) as HTMLInputElement;\r\n  const $dateSelect = $addingForm.querySelector(\r\n    \"#date-select\"\r\n  ) as HTMLInputElement;\r\n\r\n  $addTodoInput.addEventListener(\"keypress\", handleAddTodoInputKeypress);\r\n  function handleAddTodoInputKeypress(ev: KeyboardEvent) {\r\n    if (ev.key == \"Enter\") {\r\n      $setAlertMessage(\"\");\r\n\r\n      const userId = getUserIdFromUrl();\r\n      if (!userId) {\r\n        throw `cannot parse user id`;\r\n      }\r\n\r\n      const groupId = getGroupIdFromUrl();\r\n\r\n      const content = $addTodoInput.value;\r\n      if (!content) {\r\n        $setAlertMessage(\"Can't create todo with no content\");\r\n        return;\r\n      }\r\n\r\n      const endTime =\r\n        $dateSelect.value != \"\"\r\n          ? convertStringToTimestamp($dateSelect.value)\r\n          : null;\r\n\r\n      addTodo({\r\n        content,\r\n        endTime,\r\n        groupId,\r\n        isComplete: false,\r\n        owner: userId,\r\n        parentId: null,\r\n      }).then((result) => {\r\n        if (result.ok) {\r\n          $addTodoInput.value = \"\";\r\n          args.onUpdate();\r\n        } else {\r\n          throw result.error_message;\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","export function setEnterInputListener(ev: KeyboardEvent, callback: () => void) {\r\n  if (ev.key == \"Enter\") {\r\n    callback();\r\n  }\r\n}\r\n","import { keyInputListener } from \"../../../App\";\r\nimport { convertTimestampToString } from \"../../../modules/TimeModules\";\r\nimport {\r\n  editTodo,\r\n  deleteTodoItem,\r\n  completeTodos,\r\n} from \"../../../modules/TodoModules\";\r\n\r\nexport function $TodoItem(todo: TodoItem, onUpdate: () => void): HTMLElement {\r\n  const $todoItem = document.createElement(\"div\");\r\n  $todoItem.id = `todo-${todo.id}`;\r\n  $todoItem.className = `todo`;\r\n  $todoItem.innerHTML = `\r\n    <label class=\"todo-content-container\" class=\"${\r\n      todo.isComplete ? \"done\" : \"\"\r\n    }\">\r\n      <p class=\"date\">\r\n        ${todo.end_time ? convertTimestampToString(todo.end_time) : \"-\"}\r\n      </p>\r\n      <p class=\"content\">${todo.content}</p>\r\n      <div class=\"content-edit-container unactive\">\r\n        <p class=\"icon\">✎ </p>\r\n        <input class=\"content-edit\" value=\"${\r\n          todo.content\r\n        }\" placeholder=\"...content here\" />\r\n      </div>\r\n    </label>\r\n    <div class=\"action-buttons\" class=\"${todo.isComplete ? \"done\" : \"\"}\">\r\n      <button class=\"edit-button text-button\">✎</button>\r\n      <button class=\"done-button text-button\">✓</button>\r\n      <button class=\"delete-button text-button\">✖</button>\r\n    </div>\r\n  `;\r\n\r\n  // content\r\n  const $content = $todoItem.querySelector(\"#content\") as HTMLElement;\r\n  const $contentEditContainer = $todoItem.querySelector(\r\n    \".content-edit-container\"\r\n  ) as HTMLElement;\r\n  const $contentEdit = $todoItem.querySelector(\r\n    \".content-edit\"\r\n  ) as HTMLInputElement;\r\n  $contentEdit.onblur = unsetContentEditMode;\r\n  $contentEdit.addEventListener(\"keypress\", (ev) => {\r\n    keyInputListener(ev, () => {\r\n      if (todo.content != $contentEdit.value) {\r\n        todo.content = $contentEdit.value;\r\n        editTodo(todo).then(onUpdate);\r\n      } else {\r\n        unsetContentEditMode();\r\n      }\r\n    });\r\n  });\r\n\r\n  // delete button\r\n  const $deleteButton = $todoItem.querySelector(\r\n    \".delete-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $deleteButton.addEventListener(\"click\", () =>\r\n    handleDeleteButtonClick(todo.id!)\r\n  );\r\n\r\n  // edit button\r\n  const $editButton = $todoItem.querySelector(\r\n    \".edit-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $editButton.addEventListener(\"click\", () => {\r\n    handleEditButtonClick();\r\n  });\r\n\r\n  const $doneButton = $todoItem.querySelector(\r\n    `.done-button`\r\n  ) as HTMLButtonElement;\r\n  $doneButton.addEventListener(\"click\", handleDoneButtonClick);\r\n\r\n  function handleDeleteButtonClick(id: string) {\r\n    deleteTodoItem({ id }).then(onUpdate);\r\n  }\r\n\r\n  function handleEditButtonClick() {\r\n    setContentEditMode();\r\n  }\r\n\r\n  function setContentEditMode() {\r\n    $contentEditContainer.className = \"active\";\r\n    $contentEditContainer.style.display = \"flex\";\r\n    $content.className = \"unactive\";\r\n    $contentEdit.value = todo.content;\r\n    $contentEdit.focus();\r\n  }\r\n\r\n  function unsetContentEditMode() {\r\n    $contentEditContainer.className = \"unactive\";\r\n    $contentEditContainer.style.display = \"none\";\r\n    $content.className = \"active\";\r\n  }\r\n\r\n  function handleDoneButtonClick() {\r\n    if (todo.id) {\r\n      completeTodos([todo.id]).then(onUpdate);\r\n    }\r\n  }\r\n  return $todoItem;\r\n}\r\n","import { setEnterInputListener } from \"../../../modules/DocumnetModules\";\r\nimport { $mainPage } from \"../../../navigate-page\";\r\nimport { $TodoItem } from \"./todo.item\";\r\n\r\nexport async function $updateTodolist(args: {\r\n  todos: TodoItem[];\r\n  onUpdate: () => void;\r\n}) {\r\n  const { todos } = args;\r\n  const $todolist = $mainPage.querySelector(\".todolist\") as HTMLDivElement;\r\n  console.log($todolist);\r\n  $todolist.innerHTML = \"\";\r\n  console.log(todos);\r\n\r\n  todos.map((todoItem) => {\r\n    $todolist.appendChild($TodoItem(todoItem, args.onUpdate));\r\n  });\r\n}\r\n\r\nexport function $updateTitle(filter: TodosFilter, groups: Group[]) {\r\n  const $title = document.getElementById(`todo-container-title`) as HTMLElement;\r\n  const $editTitle = document.getElementById(\r\n    `todo-container-title-edit`\r\n  ) as HTMLInputElement;\r\n\r\n  let title: string = \"Todo title not recognized \";\r\n\r\n  if (filter.groupId) {\r\n    const group = groups.find((group) => group.group_id == filter.groupId);\r\n    console.log(group);\r\n    if (group) {\r\n      title = group.group_name;\r\n    } else {\r\n      title = `unrecognized Group`;\r\n    }\r\n  } else {\r\n    title = `All Todos`;\r\n  }\r\n  $title.textContent = title;\r\n  $editTitle.value = title;\r\n  $editTitle.onblur = unsetEditTitleMode;\r\n  $editTitle.addEventListener(\"keypress\", (ev) => {\r\n    setEnterInputListener(ev, $updateGroupTitle);\r\n  });\r\n\r\n  function $updateGroupTitle() {\r\n    const title = $editTitle.value;\r\n    if (title != \"\") {\r\n    }\r\n  }\r\n\r\n  const $editButton = document.getElementById(\r\n    \"title-edit-button\"\r\n  ) as HTMLButtonElement;\r\n  const $deleteButton = document.getElementById(\r\n    \"title-delete-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  $editButton.addEventListener(\"click\", setEditTitleMode);\r\n\r\n  function setEditTitleMode() {\r\n    $title.style.display = \"none\";\r\n    $editTitle.style.display = `block`;\r\n\r\n    $editTitle.focus();\r\n  }\r\n\r\n  function unsetEditTitleMode() {\r\n    $title.style.display = `block`;\r\n    $editTitle.style.display = `none`;\r\n  }\r\n}\r\n","import { $renderAccountState } from \"../../App\";\r\nimport { getUser } from \"../../modules/AuthModules\";\r\nimport {\r\n  getTodos,\r\n  getGroupsFromUser,\r\n  getFilter,\r\n} from \"../../modules/TodoModules\";\r\nimport { updatePage as navPage } from \"../../navigate-page\";\r\nimport { $initialNavContainer, $updateNavItems } from \"./nav\";\r\n\r\nimport { $initialAddTodoForm } from \"./todo/todo.add-form\";\r\nimport { $updateTodolist } from \"./todo/todo.list\";\r\n\r\nlet user: User | null;\r\n\r\nexport async function initTodoPage() {\r\n  user = await getUser();\r\n\r\n  if (user) {\r\n    history.pushState({}, \"\", `/todos?user_id=${user.uid}`);\r\n\r\n    $initialAccountState(user);\r\n    $initialNavContainer({ onUpdate: $updateView });\r\n\r\n    $updateView();\r\n  } else {\r\n    navPage(\"/login-require\");\r\n  }\r\n}\r\n\r\nfunction $initialAccountState(user: User) {\r\n  (document.getElementById(\"main-page\") as HTMLElement).style.display = \"flex\";\r\n  const $accountContainer = document.getElementById(\r\n    \"account-container\"\r\n  ) as HTMLElement;\r\n  $renderAccountState({ $container: $accountContainer, user });\r\n}\r\n\r\nasync function $updateView() {\r\n  if (!user) {\r\n    navPage(\"/login-require\");\r\n    return;\r\n  }\r\n\r\n  const groups = await getGroupsFromUser(user.uid);\r\n  $updateNavItems({\r\n    groups,\r\n    userId: user.uid,\r\n    onUpdate: $updateView,\r\n  });\r\n\r\n  const filter = getFilter(window.location.search);\r\n  const todos = await getTodos(filter);\r\n  $updateTodolist({ todos, onUpdate: $updateView });\r\n  $initialAddTodoForm({ onUpdate: $updateView });\r\n}\r\n\r\nexport function getUserIdFromUrl(): string | null {\r\n  return new URL(location.href).searchParams.get(\"user_id\");\r\n}\r\n\r\nexport function getGroupIdFromUrl(): string | null {\r\n  return new URL(location.href).searchParams.get(\"group_id\");\r\n}\r\n\r\nconst $alertMessage = document.getElementById(\r\n  \"alert-message\"\r\n) as HTMLParagraphElement;\r\n\r\nexport function $setAlertMessage(message: string) {\r\n  $alertMessage.textContent = message;\r\n}\r\n","import { initLoginPage } from \"./pages/login-page\";\r\nimport { initLoginRequirePage } from \"./pages/login-require-page\";\r\nimport { initTodoPage } from \"./pages/todo-page\";\r\n\r\ntype Path = \"/todos\" | \"/login\" | \"/login-require\";\r\n\r\nexport const $mainPage = document.getElementById(\"main-page\") as HTMLDivElement;\r\n\r\nexport const $loginPage = document.getElementById(\r\n  \"login-page\"\r\n) as HTMLDivElement;\r\n\r\nexport const $loginRequirePage = document.getElementById(\r\n  \"login-require-page\"\r\n) as HTMLDivElement;\r\n\r\nconst $pages = [$mainPage, $loginPage, $loginRequirePage];\r\n\r\n// initial script\r\nupdatePage(location.pathname as Path);\r\n\r\nexport function updatePage(path: Path) {\r\n  history.pushState({ hello: \"world\" }, \"hello\", path);\r\n\r\n  $pages.forEach(($page) => {\r\n    $page.className = \"page\";\r\n  });\r\n\r\n  switch (path) {\r\n    case \"/todos\":\r\n      $mainPage.classList.add(\"active\");\r\n      initTodoPage();\r\n      break;\r\n\r\n    case \"/login\":\r\n      $loginPage.classList.add(\"active\");\r\n      initLoginPage();\r\n      break;\r\n\r\n    case \"/login-require\":\r\n      $loginRequirePage.classList.add(\"active\");\r\n      initLoginRequirePage();\r\n      break;\r\n\r\n    default:\r\n      console.log(\"404\");\r\n  }\r\n}\r\n","import \"./navigate-page\";\r\n"]}