{"version":3,"sources":["../constants/paths.ts","../scripts/App.ts","../scripts/Modules/AuthModules.ts","../scripts/pages/signup.ts"],"names":[],"mappings":"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","file":"signup.edc0a30d.js","sourceRoot":"..\\frontend\\src\\pages","sourcesContent":["export const navigateTo = (pathname: string) => {\r\n  if (location.hostname == \"localhost\") {\r\n    window.location.pathname = pathname;\r\n  } else {\r\n    window.location.pathname = `scheduler/` + pathname;\r\n  }\r\n};\r\n\r\nexport const HOME_PATH = location.hostname == \"localhost\" ? \"index.html\" : \"\";\r\n\r\nexport const LOGIN_PATH = \"login.html\";\r\nexport const SIGNUP_PATH = \"signup.html\";\r\n","import { LOGIN_PATH, navigateTo } from \"../constants/paths\";\r\nimport { doSignOut } from \"./Modules/AuthModules\";\r\n\r\nexport function $renderAccountState(props: {\r\n  $container: HTMLElement;\r\n  user: User | null;\r\n}) {\r\n  const { $container, user } = props;\r\n  if (user) {\r\n    $renderUserState({ $container, user });\r\n  } else {\r\n    $renderLoginRequire({ $container });\r\n  }\r\n}\r\n\r\nfunction $renderUserState(props: { $container: HTMLElement; user: User }) {\r\n  const { user, $container } = props;\r\n  const { email, name } = user;\r\n  $container.innerHTML = `\r\n  <div id=\"user-information\">\r\n    <p id=\"name\">${name}</p>\r\n    <p id=\"email\">${email}</p>\r\n  </div>\r\n  <div id=\"account-actions\">\r\n    <a>Profile</a>\r\n    <a id=\"signout-button\">Sign out</a>\r\n  </div>\r\n`;\r\n  const $signOutButton = document.getElementById(\r\n    \"signout-button\"\r\n  ) as HTMLButtonElement;\r\n\r\n  const handleSignUpButtonClick = () => {\r\n    doSignOut().then((result) => {\r\n      if (result.ok) {\r\n        navigateTo(LOGIN_PATH);\r\n      }\r\n    });\r\n  };\r\n\r\n  $signOutButton.addEventListener(\"click\", handleSignUpButtonClick);\r\n}\r\n\r\nfunction $renderLoginRequire(props: { $container: HTMLElement }) {\r\n  const { $container } = props;\r\n  $container.innerHTML = `\r\n    <div id=\"login-require\">\r\n      <button id=\"login-button\">LOG IN</button>\r\n    </div>\r\n`;\r\n  const $loginButton = document.getElementById(\r\n    \"login-button\"\r\n  ) as HTMLButtonElement;\r\n  const handleLoginButtonClick = () => {\r\n    navigateTo(LOGIN_PATH);\r\n  };\r\n  $loginButton.addEventListener(\"click\", handleLoginButtonClick);\r\n}\r\n\r\nexport function $createButtonElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  onClick?: () => void;\r\n  content: string;\r\n}): HTMLButtonElement {\r\n  const { id, className, onClick, content } = props;\r\n  const $button = document.createElement(\"button\");\r\n  if (id) {\r\n    $button.id = id;\r\n  }\r\n  if (className) {\r\n    $button.className = className;\r\n  }\r\n  if (onClick) {\r\n    $button.addEventListener(\"click\", onClick);\r\n  }\r\n  $button.appendChild(document.createTextNode(content));\r\n  return $button;\r\n}\r\n\r\nexport function $createParagraphElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  text: string;\r\n  type: string;\r\n}) {\r\n  const { className, text, type } = props;\r\n  const $element = document.createElement(type);\r\n  if (className) {\r\n    $element.className = className;\r\n  }\r\n  $element.appendChild(document.createTextNode(text));\r\n  return $element;\r\n}\r\n\r\nexport function $createInputElement(props: {\r\n  id?: string;\r\n  className?: string;\r\n  placeholder?: string;\r\n  value?: string;\r\n  onSubmit?: (v: string) => Promise<void>;\r\n}): HTMLInputElement {\r\n  const { id, className, placeholder, value, onSubmit } = props;\r\n  const $input = document.createElement(`input`);\r\n  if (id) {\r\n    $input.id = id;\r\n  }\r\n  if (className) {\r\n    $input.className = className;\r\n  }\r\n  if (placeholder) {\r\n    $input.placeholder = placeholder;\r\n  }\r\n  if (value) {\r\n    $input.value = value;\r\n  }\r\n  if (onSubmit) {\r\n    $input.addEventListener(\"keypress\", (ev: KeyboardEvent) => {\r\n      if (ev.key == \"Enter\") {\r\n        onSubmit($input.value).then(() => {\r\n          $input.value = ``;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  return $input;\r\n}\r\n\r\nexport function keyInputListener(ev: KeyboardEvent, onSubmit: () => void) {\r\n  if (ev.key == \"Enter\") {\r\n    onSubmit();\r\n  }\r\n}\r\n\r\nexport function $createContainer(props: {\r\n  id?: string;\r\n  className?: string;\r\n  $elements?: HTMLElement[];\r\n}): HTMLElement {\r\n  const { $elements, className, id } = props;\r\n  const $container = document.createElement(\"div\");\r\n\r\n  if (id) {\r\n    $container.id = id;\r\n  }\r\n\r\n  if (className) {\r\n    $container.className = className;\r\n  }\r\n\r\n  if ($elements) {\r\n    $elements.map(($element) => {\r\n      $container.appendChild($element);\r\n    });\r\n  }\r\n\r\n  return $container;\r\n}\r\n\r\nexport let serverUrl = \"https://pandajiny.shop/\";\r\nexport const isDevMode: boolean =\r\n  process.env.NODE_ENV?.includes(\"DEV\") || false;\r\n\r\nexport const isLocalMode: boolean =\r\n  process.env.NODE_ENV?.toString().includes(\"LOCAL\") || false;\r\n\r\nif (isLocalMode) {\r\n  serverUrl = \"http://localhost/\";\r\n  console.log(`app is local mode server url : ${serverUrl}`);\r\n} else if (isDevMode) {\r\n  // init dev mode\r\n  console.log(`app is dev mode`);\r\n  fetch(serverUrl).then((res) => {\r\n    if (res.ok) {\r\n      console.log(`server activated`);\r\n    } else {\r\n      console.log(`server not responde, using localhost`);\r\n      serverUrl = \"http://localhost/\";\r\n    }\r\n  });\r\n}\r\n","import { serverUrl } from \"../App\";\r\n\r\nexport function getAuthHeader(): AuthHeader | null {\r\n  const token = localStorage.getItem(\"jwtToken\") || null;\r\n  if (!token) {\r\n    return null;\r\n  }\r\n\r\n  return {\r\n    Authorization: `Bearer ${token}`,\r\n  };\r\n}\r\n\r\nexport async function doLoginWithEmailAndPassword(request: LoginRequest) {\r\n  const url = serverUrl + \"auth/login\";\r\n  const response = await fetch(url, createPostOption(request));\r\n\r\n  if (response.ok) {\r\n    const result = ((await response.json()) as unknown) as LoginResult;\r\n    localStorage.setItem(\"jwtToken\", result.access_token);\r\n  } else {\r\n    const result = await response.json();\r\n    throw result.message;\r\n  }\r\n}\r\n\r\nexport async function doSignOut(): Promise<ActionResult> {\r\n  localStorage.removeItem(\"jwtToken\");\r\n  return {\r\n    ok: true,\r\n    message: `user sign out`,\r\n  };\r\n}\r\n\r\nexport const doSignUp = async (\r\n  request: SignUpRequest\r\n): Promise<ActionResult> => {\r\n  const url = serverUrl + \"auth/signup\";\r\n  const response = await fetch(url, createPostOption(request));\r\n  if (!response.ok) {\r\n    throw new Error(\"signup-failed\");\r\n  }\r\n  const result = ((await response.json()) as unknown) as LoginResult;\r\n\r\n  localStorage.setItem(\"jwtToken\", result.access_token);\r\n  console.log(`signup done`);\r\n  return {\r\n    ok: true,\r\n    message: `signup ok`,\r\n  };\r\n};\r\n\r\nexport const getUser = async (): Promise<User | null> => {\r\n  const url = serverUrl + \"auth/user\";\r\n  const headers = getAuthHeader();\r\n  if (!headers) {\r\n    return null;\r\n  }\r\n\r\n  const response = await fetch(url, {\r\n    headers,\r\n  });\r\n\r\n  const result = (await response.json()) as User;\r\n  console.log(result);\r\n  return result.email && result.uid ? result : null;\r\n};\r\n\r\nexport const createPostOption = (body: Object): RequestInit => {\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  };\r\n};\r\n\r\nexport const createAuthPostOption = (body: Object): RequestInit => {\r\n  const token = localStorage.getItem(\"jwtToken\");\r\n  return {\r\n    method: \"POST\",\r\n    headers: {\r\n      Authorization: `Bearer ${token}`,\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify(body),\r\n  };\r\n};\r\n","import { HOME_PATH, LOGIN_PATH, navigateTo } from \"../../constants/paths\";\r\nimport { doSignUp } from \"../Modules/AuthModules\";\r\n\r\nconst $message = document.getElementById(\r\n  \"signup-message\"\r\n) as HTMLParagraphElement;\r\nconst $name = document.getElementById(\"name-input\") as HTMLInputElement;\r\nconst $email = document.getElementById(\"email-input\") as HTMLInputElement;\r\nconst $password = document.getElementById(\"password-input\") as HTMLInputElement;\r\nconst $passwordConfirm = document.getElementById(\r\n  \"password-confirm\"\r\n) as HTMLInputElement;\r\n\r\nconst $signupButton = document.getElementById(\r\n  \"signup-button\"\r\n) as HTMLButtonElement;\r\n\r\nconst validate = (props: {\r\n  email: string;\r\n  password: string;\r\n  passwordConfirm: string;\r\n}): Boolean => {\r\n  const { email, password, passwordConfirm } = props;\r\n  //   todo : need to add email validator\r\n  if (!email) {\r\n    return false;\r\n  }\r\n  if (!password) {\r\n    return false;\r\n  }\r\n  if (!passwordConfirm || password != passwordConfirm) {\r\n    return false;\r\n  }\r\n  return true;\r\n};\r\n\r\n$signupButton.addEventListener(\"click\", () => {\r\n  const name = $name.value;\r\n  const email = $email.value;\r\n  const password = $password.value;\r\n  const passwordConfirm = $passwordConfirm.value;\r\n  if (validate({ email, password, passwordConfirm })) {\r\n    doSignUp({ name, email, password })\r\n      .then(() => {\r\n        navigateTo(HOME_PATH);\r\n      })\r\n      .catch((err) => {\r\n        $message.textContent = `${err.message}`;\r\n        $password.value = ``;\r\n        $passwordConfirm.value = ``;\r\n      });\r\n  }\r\n});\r\n\r\nconst $loginButton = document.getElementById(\r\n  \"login-button\"\r\n) as HTMLButtonElement;\r\n$loginButton.addEventListener(\"click\", () => {\r\n  navigateTo(LOGIN_PATH);\r\n});\r\n"]}